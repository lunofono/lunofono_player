name: CI

on:
  push:
    branches: [ v0.0.x ]
  pull_request:
    branches: [ v0.0.x ]

env:
  JAVA_VERSION: 12.x

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        flutter_channel: [ "stable", "beta" ]
        test_type: [ static, unit ]

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-java@v1
      with:
        java-version: ${{ env.JAVA_VERSION }}

    - uses: subosito/flutter-action@v1
      with:
        channel: ${{ matrix.flutter_channel }}

    - name: Add credentials to get private repositories
      run: git config --global credential.helper
        '!f() { test "$1" = get && printf "username=${{ secrets.GH_DEPS_TOKEN }}\npassword=\n"; }; f'

    - name: Install dependencies
      run: flutter pub get

    # Analyze step needs different config for pull_request and push, so it is
    # duplicated with if conditions to use the correct configuration for each
    - name: Analyze (push)
      if: github.event_name == 'push' && matrix.test_type == 'static'
      uses: kitek/dartanalyzer-annotations-action@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        check_name: test
        commit_sha: ${{ github.sha }}
    - name: Analyze (pull_request)
      if: github.event_name == 'pull_request' && matrix.test_type == 'static'
      uses: kitek/dartanalyzer-annotations-action@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        check_name: test
        commit_sha: ${{ github.event.pull_request.head.sha }}

    - name: Check format
      run: flutter format -n --set-exit-if-changed lib test example

    - name: Run unit tests
      if: matrix.test_type != 'static'
      run: flutter test --coverage

    - name: Upload ${{ matrix.test_type }} tests coverage to Codecov
      if: matrix.test_type != 'static'
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        # We can't use coverage/*.lcov.info because is not supported. See:
        # https://github.com/codecov/codecov-bash/pull/400
        files: '*.lcov.info'
        flags: type-${{ matrix.test_type }},flutter-${{ matrix.flutter_channel }}

    - name: Save coverage reports as artifacts
      if: matrix.test_type != 'static'
      uses: actions/upload-artifact@v2
      with:
        name: coverage-${{ matrix.test_type }}-flutter_${{ matrix.flutter_channel }}
        path: coverage/*.lcov.info

# vim: set et sw=2 sts=2 :
